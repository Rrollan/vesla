// --- –ó–ê–í–ò–°–ò–ú–û–°–¢–ò ---
const express = require('express');
const path = require('path');
const admin = require('firebase-admin');
const cron = require('node-cron');
const fetch = require('node-fetch');

// --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ---
const app = express();
const PORT = process.env.PORT || 10000;
const TELEGRAM_BOT_TOKEN = '8227812944:AAFy8ydOkUeCj3Qkjg7_Xsq6zyQpcUyMShY'; // –í–∞—à —Ç–æ–∫–µ–Ω –±–æ—Ç–∞

// --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø FIREBASE ADMIN SDK ---
try {
  // Render –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
  const serviceAccount = process.env.FIREBASE_SERVICE_ACCOUNT_KEY 
    ? JSON.parse(process.env.FIREBASE_SERVICE_ACCOUNT_KEY)
    : require('/etc/secrets/serviceAccountKey.json'); 
  
  if (!admin.apps.length) {
    admin.initializeApp({
      credential: admin.credential.cert(serviceAccount)
    });
  }
} catch (error) {
  console.error("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ö–ª—é—á —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Firebase –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.");
}
const db = admin.firestore();


// --- MIDDLEWARE ---
// –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (index.html, logo.jpg, –∏ —Ç.–¥.)
app.use(express.static(path.join(__dirname, '/')));
// Middleware –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON-–∑–∞–ø—Ä–æ—Å–æ–≤ –∏ CORS
app.use(express.json());
app.use((req, res, next) => {
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
    if (req.method === 'OPTIONS') return res.sendStatus(200);
    next();
});

// --- –ì–õ–ê–í–ù–´–ô –ú–ê–†–®–†–£–¢ (–¥–ª—è –æ—Ç–¥–∞—á–∏ index.html) ---
app.get('/', (req, res) => {
    res.sendFile(path.join(__dirname, 'index.html'));
});


// ======================================================================
// === –ù–û–í–´–ô –ë–õ–û–ö: API –î–õ–Ø –ú–ê–°–°–û–í–û–ô –†–ê–°–°–´–õ–ö–ò ===
// ======================================================================
app.post('/api/broadcast', async (req, res) => {
    const { message, tags, senderChatId } = req.body;

    if (!message) {
        return res.status(400).json({ error: '–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω.' });
    }
    if (!senderChatId) {
        return res.status(400).json({ error: '–ù–µ —É–∫–∞–∑–∞–Ω ID —á–∞—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞.' });
    }
    
    // –°—Ä–∞–∑—É –æ—Ç–≤–µ—á–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é, —á—Ç–æ –∑–∞–¥–∞—á–∞ –ø—Ä–∏–Ω—è—Ç–∞.
    res.status(202).json({ message: '–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞. –û—Ç—á–µ—Ç –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–∏–¥–µ—Ç –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.' });

    // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –≤—ã–ø–æ–ª–Ω—è–µ–º –¥–æ–ª–≥—É—é –∑–∞–¥–∞—á—É —Ä–∞—Å—Å—ã–ª–∫–∏
    (async () => {
        try {
            let usersQuery = db.collection('users');
            if (tags && tags.length > 0) {
                usersQuery = usersQuery.where("tags", "array-contains-any", tags);
            }

            const usersSnapshot = await usersQuery.get();
            if (usersSnapshot.empty) {
                await sendTelegramNotification(senderChatId, '‚ö†Ô∏è –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º.');
                return;
            }

            const usersToSend = usersSnapshot.docs
                .map(doc => doc.data().telegramId)
                .filter(id => id);

            if (usersToSend.length === 0) {
                 await sendTelegramNotification(senderChatId, '‚ö†Ô∏è –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ –Ω–∏ —É –∫–æ–≥–æ –∏–∑ –Ω–∏—Ö –Ω–µ—Ç Telegram ID.');
                 return;
            }

            let successCount = 0;
            let errorCount = 0;

            for (const chatId of usersToSend) {
                try {
                    const response = await sendTelegramNotification(chatId, message, true); // true, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç
                    if (response.ok) successCount++;
                    else errorCount++;
                } catch (e) {
                    errorCount++;
                }
                // –ü–∞—É–∑–∞ 100 –º—Å (10 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–µ–∫—É–Ω–¥—É) –¥–ª—è –æ–±—Ö–æ–¥–∞ –ª–∏–º–∏—Ç–æ–≤
                await new Promise(resolve => setTimeout(resolve, 100));
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
            const reportMessage = `‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${successCount}\n–û—à–∏–±–æ–∫: ${errorCount}`;
            await sendTelegramNotification(senderChatId, reportMessage);

        } catch (error) {
            console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞—Å—Å—ã–ª–∫–∏:', error);
            await sendTelegramNotification(senderChatId, `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞—Å—Å—ã–ª–∫–∏: ${error.message}`);
        }
    })();
});


// ======================================================================
// === –í–ê–® –°–¢–ê–†–´–ô –ö–û–î: –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ò –ò –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø (–Ω–µ–º–Ω–æ–≥–æ —É–ª—É—á—à–µ–Ω) ===
// ======================================================================

// 1. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞ (—Ä–∞–∑ –≤ –¥–µ–Ω—å)
async function checkAndNotifyUsers() {
  if (!admin.apps.length) return;
  console.log('–ó–∞–ø—É—Å–∫ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–æ–≤...');
  try {
      const settingsSnap = await db.collection('settings').doc('config').get();
      const orderCooldownDays = settingsSnap.exists ? settingsSnap.data().orderCooldownDays : 7;
      
      const usersQuery = db.collection('users')
                          .where('lastOrderTimestamp', '!=', null)
                          .where('cooldownNotified', '==', false);
      const usersSnap = await usersQuery.get();
      if (usersSnap.empty) {
          console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.');
          return;
      }

      const now = new Date();
      usersSnap.forEach(doc => {
          const user = doc.data();
          const lastOrderDate = new Date(user.lastOrderTimestamp);
          const cooldownEndDate = new Date(lastOrderDate.setDate(lastOrderDate.getDate() + orderCooldownDays));

          if (now >= cooldownEndDate && user.telegramId) {
              const message = `üéâ –ü—Ä–∏–≤–µ—Ç, ${user.registration.firstName}! –£ –≤–∞—Å —Å–Ω–æ–≤–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ –ø–æ –±–∞—Ä—Ç–µ—Ä—É. –ñ–¥–µ–º –≤–∞—Å!`;
              sendAn


const admin = require('firebase-admin');
const fs = require('fs');
const path = require('path');
const axios = require('axios');
const FormData = require('form-data');

// ===============================================================
// === –ù–ê–°–¢–†–û–ô–ö–ò (–≠–¢–û–¢ –ë–õ–û–ö –ù–£–ñ–ù–û –û–¢–†–ï–î–ê–ö–¢–ò–†–û–í–ê–¢–¨) ===
// ===============================================================

// 1. –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à API –∫–ª—é—á –æ—Ç ImgBB. –ï–≥–æ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞ —Å–∞–π—Ç–µ imgbb.com –≤ —Ä–∞–∑–¥–µ–ª–µ "About -> API"
const IMGBB_API_KEY = '5148efee12c90f87021e50e0155d17a0'; // –Ø –æ—Å—Ç–∞–≤–∏–ª –≤–∞—à –∫–ª—é—á –∏–∑ server.js

// 2. –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –≤–∞—à–∏–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
const PATH_TO_IMAGES_FOLDER = path.join(__dirname, 'menu_images');

// 3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É serviceAccountKey.json –≤–µ—Ä–Ω—ã–π
const PATH_TO_SERVICE_ACCOUNT_KEY = './serviceAccountKey.json';

// ===============================================================

// --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø FIREBASE ---
try {
  const serviceAccount = require(PATH_TO_SERVICE_ACCOUNT_KEY);
  if (!admin.apps.length) {
    admin.initializeApp({
      credential: admin.credential.cert(serviceAccount)
    });
  }
} catch (error) {
  console.error("–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ö–ª—é—á —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Firebase –Ω–µ –Ω–∞–π–¥–µ–Ω.");
  process.exit(1);
}

const db = admin.firestore();

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–µ—Ä–∂–∫–∏
const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));

async function uploadImages() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
    
    try {
        // 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –±–ª—é–¥–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        console.log('üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –±–ª—é–¥ –∏–∑ Firestore...');
        const menuSnapshot = await db.collection('menu').get();
        if (menuSnapshot.empty) {
            console.log('‚ùå –í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –±–ª—é–¥. –ù–µ—á–µ–≥–æ –æ–±–Ω–æ–≤–ª—è—Ç—å.');
            return;
        }

        // 2. –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É "–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞ -> ID –¥–æ–∫—É–º–µ–Ω—Ç–∞" –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
        const nameToIdMap = new Map();
        menuSnapshot.forEach(doc => {
            nameToIdMap.set(doc.data().name.toLowerCase(), doc.id);
        });
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${nameToIdMap.size} –±–ª—é–¥ –≤ –±–∞–∑–µ.`);

        // 3. –ß–∏—Ç–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–π –ø–∞–ø–∫–∏
        const imageFiles = fs.readdirSync(PATH_TO_IMAGES_FOLDER);
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${imageFiles.length} —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ø–∞–ø–∫–µ.`);

        let updatedCount = 0;
        let skippedCount = 0;

        // 4. –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Ñ–∞–π–ª—É, –∑–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ
        for (const fileName of imageFiles) {
            constitemName = path.parse(fileName).name; // –ò–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
            const filePath = path.join(PATH_TO_IMAGES_FOLDER, fileName);

            // –ò—â–µ–º ID –±–ª—é–¥–∞ –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ (–≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏)
            const docId = nameToIdMap.get(itemName.toLowerCase());

            if (docId) {
                console.log(`\n- –û–±—Ä–∞–±–æ—Ç–∫–∞: "${itemName}"`);
                try {
                    const imageBuffer = fs.readFileSync(filePath);
                    
                    const formData = new FormData();
                    formData.append('key', IMGBB_API_KEY);
                    formData.append('image', imageBuffer.toString('base64'));

                    console.log('  üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ ImgBB...');
                    const response = await axios.post('https://api.imgbb.com/1/upload', formData);

                    if (response.data && response.data.success) {
                        const imageUrl = response.data.data.url;
                        await db.collection('menu').doc(docId).update({ imageUrl: imageUrl });
                        console.log(`  ‚úÖ –£—Å–ø–µ—à–Ω–æ! –°—Å—ã–ª–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ Firestore.`);
                        updatedCount++;
                    } else {
                        console.error('  ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ—Ç ImgBB:', response.data);
                        skippedCount++;
                    }

                } catch (uploadError) {
                    console.error(`  ‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ "${fileName}":`, uploadError.message);
                    skippedCount++;
                }
            } else {
                console.warn(`  ‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: –ù–µ –Ω–∞–π–¥–µ–Ω–æ –±–ª—é–¥–æ –≤ –±–∞–∑–µ –¥–ª—è —Ñ–∞–π–ª–∞ "${fileName}"`);
                skippedCount++;
            }

            // –ó–ê–î–ï–†–ñ–ö–ê, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç API
            console.log('  ...–∂–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã...');
            await sleep(2000); 
        }

        console.log('\n=============================================');
        console.log('üéâ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É!');
        console.log(`  - –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: ${updatedCount}`);
        console.log(`  - –ü—Ä–æ–ø—É—â–µ–Ω–æ / —Å –æ—à–∏–±–∫–æ–π: ${skippedCount}`);
        console.log('=============================================');

    } catch (error) {
        console.error('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
uploadImages();
